name: Deploy Astro site to Hostinger

on:
    push:
        branches: ["dev"]
    workflow_dispatch:

permissions:
    contents: read
    id-token: write

concurrency:
    group: "pages"
    cancel-in-progress: false

env:
    BUILD_PATH: "." # Subcarpeta, si tienes una, pon su nombre
    HOSTINGER_FTP_HOST: ${{ secrets.HOSTINGER_FTP_HOST }}
    HOSTINGER_FTP_USERNAME: ${{ secrets.HOSTINGER_FTP_USERNAME }}
    HOSTINGER_FTP_PASSWORD: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
    HOSTINGER_FTP_PORT: 21 # Cambia este puerto si usas SFTP (puerto 22)

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Detect package manager
              id: detect-package-manager
              run: |
                  if [ -f "${{ github.workspace }}/yarn.lock" ]; then
                    echo "manager=yarn" >> $GITHUB_OUTPUT
                    echo "command=install" >> $GITHUB_OUTPUT
                    echo "runner=yarn" >> $GITHUB_OUTPUT
                    echo "lockfile=yarn.lock" >> $GITHUB_OUTPUT
                    exit 0
                  elif [ -f "${{ github.workspace }}/package.json" ]; then
                    echo "manager=npm" >> $GITHUB_OUTPUT
                    echo "command=ci" >> $GITHUB_OUTPUT
                    echo "runner=npx --no-install" >> $GITHUB_OUTPUT
                    echo "lockfile=package-lock.json" >> $GITHUB_OUTPUT
                    exit 0
                  else
                    echo "Unable to determine package manager"
                    exit 1
                  fi
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
            - name: Install dependencies
              run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
              working-directory: ${{ env.BUILD_PATH }}
            - name: Build with Astro
              run: |
                  ${{ steps.detect-package-manager.outputs.runner }} astro build
              working-directory: ${{ env.BUILD_PATH }}
            - name: Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                name: build
                include-hidden-files: true
                path: ${{ env.BUILD_PATH }}/dist/

    deploy:
        needs: build
        runs-on: ubuntu-latest
        name: Deploy to Hostinger
        steps:
            - name: Download build artifact
              uses: actions/download-artifact@v4
              with:
                  name: build
            - name: Deploy to Hostinger via FTP
              uses: SamKirkland/FTP-Deploy-Action@4.3.0
              with:
                  server: ${{ secrets.HOSTINGER_FTP_HOST }}
                  username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
                  password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
                  port: ${{ secrets.HOSTINGER_FTP_PORT }}
                  local-dir: ./
                  server-dir: /public_html/ # Cambia esto por la ruta correcta en tu servidor
